name: Build and Push Multi-Arch Docker Image

on:
  push:
    branches:
      - master
    # 可选：仅在Dockerfile或相关文件变更时触发
    paths:
      - 'Dockerfile'
      - '.github/workflows/build-push.yml'
      - 'src/**'  # 根据实际源代码目录调整

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # 若推送到GitHub Container Registry需要

    steps:
      - name: Check out repository
        uses: actions/checkout@v4  # 使用最新稳定版
        with:
          fetch-depth: 0  # 拉取完整历史，便于生成版本标签

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: careywong/subweb
          # 生成多标签：latest + Git commit短哈希
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # 最新版支持更多功能
        with:
          install: true  # 确保buildx正确安装
          driver-opts: |
            image=moby/buildkit:latest  # 使用最新buildkit提升性能

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 可选：登录GitHub Container Registry（如果需要）
      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5  # 最新版支持缓存优化
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}  # 使用metadata生成的标签
          labels: ${{ steps.meta.outputs.labels }}  # 自动生成规范标签
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          # 可选：启用详细日志
          build-args: |
            VERSION=${{ github.sha }}
          # 可选：设置镜像压缩
          outputs: type=image,compression=zstd,compression-level=3

      # 移动缓存（避免缓存体积无限增长）
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache